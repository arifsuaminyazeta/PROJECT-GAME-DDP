#include <ncurses/ncurses.h>
#include <windows.h>
#define WIDTH 20
#define HEIGHT 10
int maze[HEIGHT][WIDTH] = {
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},
    {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1},
    {1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1},
    {1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

void labirin(int posisi_x_pemain, int posisi_y_pemain){
    for (int y = 0; y < HEIGHT; y++){
    	attron(COLOR_PAIR(1));
        for (int x = 0; x < WIDTH; x++){
            if (x == posisi_x_pemain && y == posisi_y_pemain){
            	attron(COLOR_PAIR(2));
                mvprintw(y, x, ">>");
            attroff(COLOR_PAIR(2));
			}else if (maze[y][x] == 1){
				attron(COLOR_PAIR(1));
                mvprintw(y, x, "#");
            }else {
                mvprintw(y, x, " ");
            }
            mvprintw(27,50,"Gunakan Tombol Panah Untuk Bergerak!!");
        }attroff(COLOR_PAIR(1));
    }
}

void start(){
    char nama[50];

    clear();
    attron(COLOR_PAIR(1));
    mvprintw(5, 10, "Masukkan Nama Anda: ");
    echo();
    curs_set(1);
    mvgetnstr(5, 30, nama, 49);
    noecho();
    curs_set(0);

    clear();
    attron(COLOR_PAIR(1));
    mvprintw(21, 47, "Halo, %s! Selamat Bermain!!", nama);
    attroff(COLOR_PAIR(1));
    refresh();
    Sleep(1500);

    clear();
    for (int i = 0; i < 3; i++) {
        attron(COLOR_PAIR(1));
        mvprintw(26, 100, "LOADING...");
        mvprintw(27, 100, "--------------------");
        mvprintw(28, 100, "|                  |");
        mvprintw(29, 100, "--------------------");

        for (int f = 1; f < 18; f++) {
        	attron(COLOR_PAIR(2));
            mvprintw(28, 100 + f, "|");
            refresh();
            Sleep(50);
        }attroff(COLOR_PAIR(2));
    }attroff(COLOR_PAIR(1));
    clear();

    refresh();
    getch();
}

void credit(){
    clear();
    attron(COLOR_PAIR(1));
    mvprintw(15, 48, "=== CREDIT ===");
    mvprintw(17, 48, "1. Muhamad Arif (2417051045)");
    mvprintw(18, 48, "2. M Rafi Al Musthafa (2457051009)");
    mvprintw(19, 48, "3. Zahra Ayesha (2417051027)");
    mvprintw(21, 48, "(Tekan tombol apapun untuk kembali ke menu utama.)");
    attroff(COLOR_PAIR(1));
    refresh();
    getch();
}

int main(){
    initscr();
    noecho();
    cbreak();
    curs_set(0);
    keypad(stdscr, TRUE);

    start_color();
    init_pair(1, COLOR_GREEN, COLOR_BLACK);
    init_pair(2, COLOR_BLUE, COLOR_BLACK);
    char menu[3][10] = {"Start", "Credit", "Exit"};
    int pilihan = 0;
    int input;

    while (true){
        clear();
        for (int i = 0; i < 3; ++i){
            if (i == pilihan){
                attron(A_REVERSE | COLOR_PAIR(1));
            }else {
                attron(COLOR_PAIR(1));
            }
            mvprintw(20 + i, 57, "%s", menu[i]);
            attroff(A_REVERSE | COLOR_PAIR(1));
        }
        refresh();

        input = getch();
        if(input == KEY_UP){
            pilihan = (pilihan == 0) ? 2 : pilihan - 1;
        }else if (input == KEY_DOWN){
            pilihan = (pilihan == 2) ? 0 : pilihan + 1;
        }else if(input == '\n'){
            if(pilihan == 0){
                start();
                int posisi_x_pemain = 1, posisi_y_pemain = 1;
                while(1){
                    clear();
                    labirin(posisi_x_pemain, posisi_y_pemain);
                    refresh();

                    if(posisi_x_pemain == WIDTH - 1 && posisi_y_pemain == HEIGHT - 2){
                        mvprintw(HEIGHT / 2, WIDTH / 2 - 5, "You Win!");
                        refresh();
                        getch();
                        break;
                    }

                    input = getch();
                    if (input == KEY_UP && maze[posisi_y_pemain - 1][posisi_x_pemain] == 0) posisi_y_pemain--;
                    else if (input == KEY_DOWN && maze[posisi_y_pemain + 1][posisi_x_pemain] == 0) posisi_y_pemain++;
                    else if (input == KEY_LEFT && maze[posisi_y_pemain][posisi_x_pemain - 1] == 0) posisi_x_pemain--;
                    else if (input == KEY_RIGHT && maze[posisi_y_pemain][posisi_x_pemain + 1] == 0) posisi_x_pemain++;
                }
            } else if (pilihan == 1){
                credit();
            } else if (pilihan == 2){
                break;
            
            }
        }
    }

    endwin();
    return 0;
}
